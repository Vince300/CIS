#!/usr/bin/env ruby
require 'open3'
require 'logger'
require 'yaml'

config_file = File.expand_path('../control.yml', __FILE__)
config = YAML.load_file(config_file)
$key_file = File.expand_path(File.join('..', config['admin_key']), config_file)
provisioning_dir = File.expand_path(File.join('..', config['provisioning_dir']), config_file)
$logger = Logger.new(STDERR)

unless ARGV.length >= 2
    puts "Usage: ./control [env|all] [action]"
    exit 1
end

def ssh_do(host)
    cmd = "ssh -i #{$key_file} admin@#{host} 'sudo bash -s'"
    $logger.debug(cmd)
    Open3.popen3(cmd) do |stdin, stdout, stderr, wait_thr|
        yield(stdin, stdout, stderr, wait_thr)
    end
end

def ssh_capture(host, stdin)
    cmd = "ssh -i #{$key_file} admin@#{host} 'sudo bash -s'"
    $logger.debug(cmd)
    Open3.capture2e(['ssh', '-i', $key_file, "admin@#{host}", "sudo bash -s"], stdin)
end

envs = ARGV.shift
action = ARGV.shift
envs = config.keys.to_a if envs == 'all'
envs = [envs] unless envs.is_a? Array

envs.each do |env|
    next unless config[env].is_a? Hash
    # next unless .is_a? Hash
    $logger.info("[#{env}] begin")

    config[env]['hosts'].each do |host|
        if action == 'restart-services'
            if services = config[env]['services']
                $logger.info("[#{env}] reloading systemd and restarting #{services.join(',')}")
                ssh_do(host) do |stdin, stdout, stderr, wait_thr|
                    stdin.puts("systemctl daemon-reload")
                    services.each do |service|
                        stdin.puts("systemctl restart #{service}")
                    end
                end
            end
        elsif action == 'deploy'
            if deploy_commands = config[env]['deploy']
                $logger.info("[#{env}] [#{host}] pushing deploy files")
                cmd = "cd \"#{provisioning_dir}\" && echo \"put *\" | sftp -i \"#{$key_file}\" admin@#{host}"
                $logger.debug(cmd)
                system(cmd)

                $logger.info("[#{env}] [#{host}] running deploy commands #{deploy_commands.inspect}")
                cmd = "echo \"#{deploy_commands}\" |ssh -i \"#{$key_file}\" admin@#{host} 'bash -s'"
                $logger.debug(cmd)
                system(cmd)
            end
        else
            if commands = config[env]['actions'][action]
                ssh_do(host) do |stdin, stdout, stderr, wait_thr|
                    stdin.puts(commands)
                    stdin.close
                    while output = stdout.gets
                        puts "    #{host} | #{output}"
                    end
                end
            else
                $logger.info("[#{env}] unknown action #{action}")
            end
        end
    end

    $logger.info("[#{env}] end")
end