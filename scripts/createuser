#!/usr/bin/env python

import sys
import subprocess
import yaml

conf = yaml.load(open(os.path.dirname(os.path.realpath(__file__)) + "config_createuser.yml"))

ca_crt_file = conf['ca_crt_file']
ca_key_file = conf['ca_key_file']

def call(command):
    subprocess.call(command, shell=True)

def isValid(username):
    if not username[0].islower():
        return False
    for c in username:
        if not (c.islower() or c.isdigit()):
            return False
        return True

if len(sys.argv) < 2:
    print "Utilisation de la commande : ./createuser username"
    exit(0)

username = sys.argv[1]

if not isValid(username):
    print("Erreur : Minuscules et chiffres seulement")
    exit(0)

# Add shell user

subprocess.call("sudo adduser " + username,shell=True)

# Add the user to the group of limited privileges users (see /etc/security/limits.conf)
subprocess.call("sudo gpasswd -a " + username + " limited",shell=True)

# Set quotas for basic user
block_softlimit = conf['block_softlimit']
block_hardlimit = conf['block_hardlimit']
inode_softlimit = conf['inode_softlimit']
inode_hardlimit = conf['inode_hardlimit']
subprocess.call("sudo setquota -u " + username + " " + "{} {} {} {}".format(block_softlimit,block_hardlimit,inode_softlimit,inode_hardlimit) +  " -a /" ,shell=True)

# chmod the homefile 
subprocess.call("sudo chmod og-rwx /home/" + username,shell=True)

# Create certificates used to POST to localhost
call("mkdir /srv/certs/"+username)
folder = "/srv/certs/"+username
call("sudo openssl genrsa -out "+folder+"/client.key 2048")
call('sudo openssl req -new -key '+folder+'/client.key -out '+folder+'/client.csr -subj "/CN='+username+'"')
call("sudo openssl x509 -req -in "+folder+"/client.csr -CA " + ca_crt_file + " -CAkey " + ca_key_file + " -out "+folder+"/client.crt -days 365 -sha256")
call("sudo chmod 500 "+folder)
call("sudo chown "+username+":"+username + " " + folder)

