#!/usr/bin/env python

import sys, os
from bashrun import call
from parseargs import parseargs
import random
import string
import requests
import time
import getpass
import yaml

from requests.packages.urllib3.exceptions import InsecureRequestWarning
from requests.packages.urllib3.exceptions import SubjectAltNameWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
requests.packages.urllib3.disable_warnings(SubjectAltNameWarning)

conf = yaml.load(open("/usr/local/etc/config_lancerjob.yml"))

cert_server_file = conf['cert_server_file']
protocol = conf['protocol']
nginx_adress = conf['nginx_adress']
port = conf['port']

username = getpass.getuser()
user_folder = "/home/"+username 
cert_cert_file = "/srv/certs/"+username+"/client.crt"
cert_key_file = "/srv/certs/"+username+"/client.key"

args = parseargs(sys.argv)
if not 'job' in args:
    print("Usage : lancerjob --job job_name [optional : --in data_directory_name --externalize https://othersiteurl]")
    exit(-1)

job_path = args['job']
job_absolute_path = os.path.abspath(job_path)
job_name = job_path[job_path.rfind('/'):] if '/' in job_path else job_path
data_path = args['in'] if 'in' in args else None
def randomword(length):
	return ''.join(random.choice(string.lowercase) for i in range(length))
temp_tar = randomword(50)

id_job = random.randint(1,2**30)

call("mkdir " + temp_tar)
call("cp " + job_absolute_path + " " + temp_tar + "/job") 
if data_path:
	data_absolute_path = os.path.abspath(data_path)
	call("cp " + data_absolute_path + "/* " + temp_tar + "/")
call("(cd " + temp_tar + "; tar zcf arch.tar.gz *)")

try:
	request = requests.post(protocol + "://" + nginx_adress + ":" + str(port) + "/job/" + str(id_job), \
		verify=cert_server_file,\
		cert=(cert_cert_file, cert_key_file), \
		data={'externalize':(args['externalize'] if 'externalize' in args else "")}, \
		files={'job': ('arch.tar.gz', open(user_folder+"/"+temp_tar+'/arch.tar.gz', 'rb'), 'multipart/form-data', {'Expires': '0'})}  )
finally:
	call("rm -r " + temp_tar)

print("Code de retour : " + str(request.status_code))
print("Message de retour : \n" + request.text)
